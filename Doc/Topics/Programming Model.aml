<?xml version="1.0" encoding="utf-8"?>
<topic id="ae97edc3-eb07-4af2-a3a4-d9e8a3910b87" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <para>Although WPF Docking is a very sophisticated UI library, it has a very simple programming model.
    In most cases, you, as a programmer, only need to deal with two classes: <token>DockControl</token>
    and <token>DockItem</token>.</para>
      <autoOutline />
    </introduction>
    <section address="Section1">
      <title>Implement Your DockItem Objects</title>
      <content>
        <para>Implement your individual window as <token>DockItem</token> object, which derives from
      <codeEntityReference>T:System.Windows.Controls.ContentControl</codeEntityReference> class. Set
      the <codeEntityReference>P:System.Windows.Controls.ContentControl.Content</codeEntityReference>
      property to organize the UI. For example, the following XAML code defines a simple dockable
      window displays a welcome message:</para>
        <code lang="XAML"><![CDATA[
			<dz:DockItem
			    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			    xmlns:dz="http://schemas.devzest.com/presentation/docking"
			    TabText="Welcome" Title="Welcome">
	            <FlowDocumentScrollViewer>
	                <FlowDocumentScrollViewer.Document>
	                    <FlowDocument FontFamily="Calibri" FontSize="14.5" TextAlignment="Left">
	                        <Paragraph FontSize="22" FontWeight="Bold">Welcome to DevZest Docking</Paragraph>
	                    </FlowDocument>
	                </FlowDocumentScrollViewer.Document>
	            </FlowDocumentScrollViewer>
            </dz:DockItem>
		]]></code>
        <alert class="note">You may define the DockItem object as the root element of the XAML element tree, and add a x:Class
	  attribute to join the code-behind partial class.</alert>
      </content>
    </section>
    <section address="Section2">
      <title>Place a DockControl in Your Application Main Form/Window</title>
      <content>
        <para>
          <token>DockControl</token> is the core of docking window layout. You need to place a <token>DockControl</token>
      in your application main form/window. For example:</para>
        <code lang="XAML"><![CDATA[
			<Window
			    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			    xmlns:dz="http://schemas.devzest.com/presentation/docking"
			    Title="DockControl Sample"
			    WindowState="Maximized">
			    <dz:DockControl>
			    ...
			    </dz:DockControl>
			</Window>
		]]></code>
      </content>
    </section>
    <section address="Section3">
      <title>Show DockItem by XAML or Code</title>
      <sections>
        <section>
          <title>Show DockItem by XAML</title>
          <content>
            <para>To show <token>DockItem</token> by XAML, add <token>DockItem</token> objects to
      <codeEntityReference>P:DevZest.Windows.Docking.DockControl.DockItems</codeEntityReference> collection,
      with its <codeEntityReference>P:DevZest.Windows.Docking.DockItem.ShowAction</codeEntityReference> set:</para>
            <code lang="XAML"><![CDATA[
<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:dz="http://schemas.devzest.com/presentation/docking"
    Title="DockControl Sample"
    WindowState="Maximized">
    <dz:DockControl>
        <dz:DockItem TabText="Welcome" Title="Welcome" ShowAction="{dz:ShowAsDockPositionAction DockPosition=Document}">
            <FlowDocumentScrollViewer>
                <FlowDocumentScrollViewer.Document>
                    <FlowDocument FontFamily="Calibri" FontSize="14.5" TextAlignment="Left">
                        <Paragraph FontSize="22" FontWeight="Bold">Welcome to DevZest Docking</Paragraph>
                    </FlowDocument>
                </FlowDocumentScrollViewer.Document>
            </FlowDocumentScrollViewer>
        </dz:DockItem>
        <dz:DockItem TabText="Saved State" Title="Saved State" ShowAction="{dz:ShowAsDockPositionAction DockPosition=Bottom}">
            <TextBox />
        </dz:DockItem>
        <dz:DockItem TabText="Output" Title="Output" ShowAction="{dz:ShowAsDockPositionAction DockPosition=Bottom}">
            <TextBox />
        </dz:DockItem>
        <dz:DockItem TabText="Solution Explorer" Title="Solution Explorer" ShowAction="{dz:ShowAsDockPositionAction DockPosition=Right}">
            <TextBox />
        </dz:DockItem>
        <dz:DockItem TabText="Properties" Title="Properties" ShowAction="{dz:ShowAsDockPositionAction DockPosition=Right}">
            <TextBox />
        </dz:DockItem>
    </dz:DockControl>
</Window>			]]></code>
            <table>
              <title>List of <codeEntityReference>ShowAction</codeEntityReference> Objects</title>
              <tableHeader>
                <row>
                  <entry>ShowAction</entry>
                  <entry>Description</entry>
                </row>
              </tableHeader>
              <row>
                <entry>
                  <codeEntityReference>T:DevZest.Windows.Docking.ShowAsDockPositionAction</codeEntityReference>
                </entry>
                <entry>Show <token>DockItem</token> as specified dock position.</entry>
              </row>
              <row>
                <entry>
                  <codeEntityReference>T:DevZest.Windows.Docking.ShowAsFloatingAction</codeEntityReference>
                </entry>
                <entry>Show <token>DockItem</token> as floating window.</entry>
              </row>
              <row>
                <entry>
                  <codeEntityReference>T:DevZest.Windows.Docking.ShowAsSidePaneAction</codeEntityReference>
                </entry>
                <entry>Show <token>DockItem</token> as side by side DockPane.</entry>
              </row>
              <row>
                <entry>
                  <codeEntityReference>T:DevZest.Windows.Docking.ShowAsTabbedAction</codeEntityReference>
                </entry>
                <entry>Show <token>DockItem</token> as tabbed.</entry>
              </row>
            </table>
          </content>
        </section>
        <section>
          <title>Show DockItem by Code</title>
          <content>
            <para>To show <token>DockItem</token> by code is extremely easy: simply call one of the overloaded
	      <codeEntityReference autoUpgrade="true">M:DevZest.Windows.Docking.DockItem.Show(DevZest.Windows.Docking.DockControl)</codeEntityReference>
	      methods. The following code snippet is equivalent of the previous XAML code:</para>
            <code lang="C#"><![CDATA[
			  ... // Code omited: create instance of welcome, savedState, output, solutionExplorer, properties
			  welcome.Show(dockControl, DockPosition.Document);
			  savedState.Show(dockControl, DockPosition.Bottom);
			  output.Show(dockControl, DockPosition.Bottom);
			  solutionExplorer.Show(dockControl, DockPosition.Right);
			  properties.Show(dockControl, DockPosition.Right);
			]]></code>
            <code lang="VB.Net"><![CDATA[
			  ... ' Code omited: create instance of welcome, savedState, output, solutionExplorer, properties
			  welcome.Show(dockControl, DockPosition.Document)
			  savedState.Show(dockControl, DockPosition.Bottom)
			  output.Show(dockControl, DockPosition.Bottom)
			  solutionExplorer.Show(dockControl, DockPosition.Right)
			  properties.Show(dockControl, DockPosition.Right)
			]]></code>
            <alert class="note">
	        Calling <codeEntityReference autoUpgrade="true">M:DevZest.Windows.Docking.DockItem.Show(DevZest.Windows.Docking.DockControl)</codeEntityReference>
	        method will implicitly add this <token>DockItem</token>
	        into <codeEntityReference>P:DevZest.Windows.Docking.DockControl.DockItems</codeEntityReference> collection, you don't
	        need to add it to the collection explicitly.
	      </alert>
          </content>
        </section>
      </sections>
    </section>
    <relatedTopics>
      <token>DockControl</token>
      <token>DockItem</token>
    </relatedTopics>
  </developerConceptualDocument>
</topic>